#!/usr/bin/bash
#set -v
#set -x
# produces
#  update.ddmmm		log of l2cvs update command
#  update.ddmmm.filein	local filein script
#  commit		script for committing changes, one at a time
#  update.ddmmm.mail	file to edit and mail to friends
#  download.ksh		file to rcp files down to the pc (for pc dir only)
#
#  Arguments are those you want to pass to "l2cvs update".
#
#  At the end, emx is started on the mail and commit files so you can edit
#  them prior to mailing them off (this script does not mail or checkin).
#


today=`date +"%d%h"`
mail=update.$today.mail
filein=update.$today.filein
log=update.$today
pc=download.ksh

rm -f tmp/xxx* $mail $filein $log

l2cvs update $* 2>&1 | tee $log

# get modified files (including conflicts)
sed -n '/^[MC] /p' $log | sed 's/^[MC] \([^ ]*\) .*$/\1/' >/tmp/xxxmodified

# also put conflicts in a seperate file
sed -n '/^C /p'  $log | sed 's/^C \([^ ]*\) .*$/\1/'      >/tmp/xxxconflicts

# get added files
sed -n '/^A /p' $log    | sed 's/^A \([^ ]*\)$/\1/'       >/tmp/xxxadded

# combine the changed files
cat /tmp/xxxmodified   >/tmp/xxxcombined
cat /tmp/xxxadded     >>/tmp/xxxcombined


# put updated files in local filein script
echo "define ErrorCount 0"                        >$filein
echo "output push logs/"$today".log only" >>$filein
# updates
sed -n '/^U[ ]/p'  $log | sed 's/^U \([^ ]*\).*$/input image\/\1/' >>$filein
# merges
sed -n '/^RCS file:/p' $log | sed "s%^RCS file: `cvsdir`/\([^.]*.gs*\),v$%input image/\1%" >>$filein
echo "output pop"                                >>$filein
echo "object ErrorCount"                         >>$filein
echo "commit"					 >>$filein

# make a PC update script
rm -f $pc
echo "set -x" >$pc
echo "set -v" >>$pc
sed -n '/^U[ ]/p'  $log | sed 's/^U \([^ ]*\).*$/rcp dirt:devel/pc/image\/\1/' >>$pc
echo "rcp dirt:devel/pc/image/$filein ../filein.gs" >>$pc

# create a commit script (for if the user wants to do individual commits)
echo '#!/usr/bin/bash' >commit
echo 'set -v -x'  >>commit
if [ -d CVS.adm ]; then
  sed 's/^\(.*\)$/cvs commit \-m \"\" \1/' /tmp/xxxmodified >> commit
  sed 's/^\(.*\)$/cvs commit \-m \"\" \1/' /tmp/xxxadded   >> commit
else
  sed 's/^[MC] \(.*\)$/cvs commit \-m \"\" \1/' /tmp/xxxmodified >> commit
  sed 's/^\(.*\)$/cvs commit \-m \"\" \1/' /tmp/xxxadded   >> commit
fi
AD=`cat /tmp/xxxadded`
if [ -n "$CF" ]; then
  echo "New files:" >> $mail
  cat /tmp/xxxadded >> $mail
fi

CF=`cat /tmp/xxxconflicts`
if [ -n "$CF" ]; then
  echo "I had merge conflicts in these files:" >> $mail
  cat /tmp/xxxconflicts >> $mail
fi

GS=`grep '\.gs$' /tmp/xxxcombined`
if [ -n "$GS" ]; then

  echo "
! Filein script ---------------------------------------------------
" >> $mail

  for i in `cat /tmp/xxxcombined`
  do
    if [ ! "$i" = "M" -a ! "$i" = "C" ]; then
      echo "input $i" >> $mail
    fi
  done

fi

function checkin_diff
{
  for cd1 in $@
  do
    grep $i $log >>$mail
    cd2=`l2cvs status $cd1 | grep "RCS:" | cut -f2`
    l2cvs diff -r$cd2 $cd1
  done
}


#for i in `cat /tmp/xxxmodified`
#do
#    echo "+++++++++++++++++++++++++++++++++++++++++++++++" >> $mail
#    echo $i >> $mail
#    echo >> $mail
#    checkin_diff $i >> $mail
#    echo >> $mail
#done

chmod u+x commit
emx $mail commit &
echo "[editor started on mail and commit files]"
echo "[use 'commit' script or l2cvs commit -a when ready]"

