#!/bin/sh
#set -x
#set -v
there=`pwd`
output=~/tmp/unittests.txt
rm -f $output
today=`date`
echo "Unit test results on $today" > $output
echo "  From $PWD" >>$output
echo "" >>$output
echo "" >>$output


function checkDunit
{
# $1 = unit test directory name
# $2 = run directory name  ($1/$2-* holds the run)
# e.g., $1=gemfirexd-dunit $2=dunit-tests
if [ ! -r $1/$2.conf ]; then
  echo "$1 tests NOT RUN" >> $output
else

  dunitdir=$1/$2

  ddir=`ls -td ${dunitdir}-* | head -n 1`

#  if [ -r $ddir/locator1*/system.log ]; then
#    grep -i -m 1 "revision" $ddir/locator1*/system.log >> $output
#  fi
#  echo "" >> $output

  if [ -r ${dunitdir}.conf ]; then
    if [ -d $ddir ]; then
      if [ -r $ddir/hang.txt ]; then
        echo "$1 tests HUNG" >> $output
      elif [ -r $ddir/failures ]; then
        numfailures=`ls $ddir/failures | wc -l`
        echo "$1 failures: $numfailures" >> $output
      else
        echo "$1 tests passed" >> $output
      fi
    else
      echo "$1 tests passed" >> $output
    fi
  else
    echo "$1 tests NOT RUN" >> $output
  fi
fi
}

function listDunitFailures
{
if [ -r $1/$2-*/failures ]; then
  echo "" >>$output
  echo "failed $1 tests:" >>$output
  ls $1/$2-*/failures >>$output
fi
}

function checkBT
{
if [ -r $there/$1 ]; then
  cd $there/$1
  numpass=`grep -c " P " oneliner.txt`
  numhangs=`grep -c " H " oneliner.txt`
  numfailures=`grep -c " F " oneliner.txt`
  if [ $numhangs -gt 0  -o  $numfailures -gt 0 ]; then
    echo "$1: ${numpass} passed, ${numhangs} hanged, ${numfailures} failed" >> $output
  else
    echo "$1 tests passed" >>$output
  fi
else
  echo "$1 tests NOT RUN" >>$output
fi
}

function listBTfailures
{
if [ -r $there/$1 ]; then
  errs=`grep " [F,H] " $there/$1/oneliner.txt`
  if [ x"$errs" != x ]; then
    echo "" >>$output
    echo "failed $1 tests:" >>$output
    grep " [F,H] " $there/$1/oneliner.txt >>$output
  fi
fi
}


#########################################################

if [ -r gemfirexd-dunit ]; then
  checkDunit gemfirexd-dunit dunit-tests
fi
cd $there
if [ -r gfxd-dunit ]; then
  checkDunit gfxd-dunit gemfirexd-dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit1 ]; then
  checkDunit gemfirexd-dunit1 dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit2 ]; then
  checkDunit gemfirexd-dunit2 dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit3 ]; then
  checkDunit gemfirexd-dunit3 dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit4 ]; then
  checkDunit gemfirexd-dunit4 dunit-tests
fi
cd $there
if [ -r gemfirexd-integration-dunit ]; then
  checkDunit gemfirexd-integration-dunit dunit-tests
fi
cd $there
if [ -r gemfirexd-wan-dunit ]; then
  checkDunit gemfirexd-wan-dunit dunit-tests
fi
cd $there
if [ -r gemfirexd-backcomp-dunit ]; then
  checkDunit gemfirexd-backcomp-dunit dunit-tests
fi


for x in junit/site*/failures/*.txt; do
  if [ -r $x ]; then
    jfail="y"
  fi
done
numjfailures=0
if [ x"$jfail" != x ]; then
  numjfailures=`ls junit/site*/failures/*.txt | wc -l`
  echo "junit failures: $numjfailures" >>$output
else
  if [ -r junit ]; then
    echo "junit tests passed" >> $output
  else
    echo "junit tests NOT RUN" >> $output
  fi
fi

checkBT gfxd-smoke

cd $there
checkBT smoke

cd $there
if [ -d gemfirexd-junit ]; then
  if [ -r gemfirexd-junit/failures ]; then
    sjfail="y"
    numsjfailures=`ls gemfirexd-junit/failures/*.txt | wc -l`
    echo "gemfirexd-junit failures: $numsjfailures" >>$output
  else
    echo "gemfirexd-junit tests passed" >>$output
  fi
else
  for x in gemfirexd-junit-parallel/site*/failures/*.txt; do
    sjfail="y"
  done
  numsjfailures=0
  if [ x"$sjfail" != x ]; then
    numsjfailures=`ls gemfirexd-junit-parallel/site*/failures/*.txt | wc -l`
    echo "gemfirexd-junit-parallel failures: $numsjfailures" >>$output
  else
    echo "gemfirexd-junit-parallel tests passed" >>$output
  fi
fi

if [ -r derby-junit-tests/failures ]; then
  numdjfailures=`ls derby-junit/failures/*.txt | wc -l`
  echo "derby-junit-tests failures: $numdjfailures" >>$output
else
  echo "derby-junit-tests passed" >>$output
fi

if [ -r derby-harness-tests/failures ]; then
  numdhfailures=`ls derby-harness/failures/*.txt | wc -l`
  echo "derby-harness-tests failures: $numdhfailures" >>$output
else
  echo "derby-harness-tests passed" >>$output
fi

cd $there
if [ x"$numjfailures" != x"" ]; then
  echo "" >>$output
  echo "failed junit tests:" >>$output
  if [ -d junit/site-1 ]; then
    ls junit/site*/failures/*.txt >>$output
  else
    ls junit/failures/*.txt >>$output
  fi
fi


cd $there
if [ x"$numsjfailures" != x"" ]; then
  echo "" >>$output
  echo "failed gemfirexd-junit tests:" >>$output
  if [ -d gemfirexd-junit ]; then
    ls gemfirexd-junit/failures/*.txt >>$output
  else
    ls gemfirexd-junit-parallel/site*/failures/*.txt >>$output
  fi
fi


if [ -r gemfirexd-dunit ]; then
  listDunitFailures gemfirexd-dunit dunit-tests
fi
cd $there
if [ -r gfxd-dunit ]; then
  listDunitFailures gfxd-dunit gemfirexd-dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit1 ]; then
  listDunitFailures gemfirexd-dunit1 dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit2 ]; then
  listDunitFailures gemfirexd-dunit2 dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit2 ]; then
  listDunitFailures gemfirexd-dunit3 dunit-tests
fi
cd $there
if [ -r gemfirexd-dunit2 ]; then
  listDunitFailures gemfirexd-dunit4 dunit-tests
fi
cd $there
if [ -r gemfirexd-integration-dunit ]; then
  listDunitFailures gemfirexd-integration-dunit dunit-tests
fi
cd $there
if [ -r gemfirexd-wan-dunit ]; then
  listDunitFailures gemfirexd-wan-dunit dunit-tests
fi
cd $there
if [ -r gemfirexd-backcomp-dunit ]; then
  listDunitFailures gemfirexd-backcomp-dunit dunit-tests
fi

cd $there
listBTfailures gfxd-smoke

cd $there
listBTfailures smoke

emx $output */error.grep */*/error.grep */*/failures/* */*/*/failures/*
rm -f $output
